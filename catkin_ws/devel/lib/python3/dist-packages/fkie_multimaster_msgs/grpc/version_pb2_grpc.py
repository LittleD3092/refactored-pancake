# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from fkie_multimaster_msgs.grpc import version_pb2 as fkie__multimaster__msgs_dot_grpc_dot_version__pb2


class VersionServiceStub(object):
  """* The version service definition. 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVersion = channel.unary_unary(
        '/fkie_multimaster_msgs.version.VersionService/GetVersion',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_version__pb2.Empty.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_version__pb2.Version.FromString,
        )


class VersionServiceServicer(object):
  """* The version service definition. 
  """

  def GetVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VersionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersion,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_version__pb2.Empty.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_version__pb2.Version.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fkie_multimaster_msgs.version.VersionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
