# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from fkie_multimaster_msgs.grpc import monitor_pb2 as fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2


class MonitorServiceStub(object):
  """System and ROS monitor service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSystemDiagnostics = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/GetSystemDiagnostics',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Filter.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.FromString,
        )
    self.GetSystemWarnings = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/GetSystemWarnings',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.FromString,
        )
    self.GetDiagnostics = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/GetDiagnostics',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Filter.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.FromString,
        )
    self.GetWarnings = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/GetWarnings',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.FromString,
        )
    self.KillProcess = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/KillProcess',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Pid.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.FromString,
        )
    self.GetUser = channel.unary_unary(
        '/fkie_multimaster_msgs.monitor.MonitorService/GetUser',
        request_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.SerializeToString,
        response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.User.FromString,
        )


class MonitorServiceServicer(object):
  """System and ROS monitor service definition.
  """

  def GetSystemDiagnostics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSystemWarnings(self, request, context):
    """returns only warnings and errors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDiagnostics(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetWarnings(self, request, context):
    """returns only warnings and errors
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def KillProcess(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MonitorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSystemDiagnostics': grpc.unary_unary_rpc_method_handler(
          servicer.GetSystemDiagnostics,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Filter.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.SerializeToString,
      ),
      'GetSystemWarnings': grpc.unary_unary_rpc_method_handler(
          servicer.GetSystemWarnings,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.SerializeToString,
      ),
      'GetDiagnostics': grpc.unary_unary_rpc_method_handler(
          servicer.GetDiagnostics,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Filter.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.SerializeToString,
      ),
      'GetWarnings': grpc.unary_unary_rpc_method_handler(
          servicer.GetWarnings,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.DiagnosticArray.SerializeToString,
      ),
      'KillProcess': grpc.unary_unary_rpc_method_handler(
          servicer.KillProcess,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Pid.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.SerializeToString,
      ),
      'GetUser': grpc.unary_unary_rpc_method_handler(
          servicer.GetUser,
          request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.Empty.FromString,
          response_serializer=fkie__multimaster__msgs_dot_grpc_dot_monitor__pb2.User.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fkie_multimaster_msgs.monitor.MonitorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
